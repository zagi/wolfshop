name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-lint:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer, phpstan, php-cs-fixer

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Copy .env
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Set up database
        run: |
          php artisan config:cache
          php artisan migrate --force
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: test_db
          DB_USERNAME: root
          DB_PASSWORD: password
          DB_HOST: 127.0.0.1
          BASIC_AUTH_USER: user
          BASIC_AUTH_PASSWORD: pass

      - name: Run tests
        run: php artisan test
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: test_db
          DB_USERNAME: root
          DB_PASSWORD: password
          DB_HOST: 127.0.0.1
          BASIC_AUTH_USER: user
          BASIC_AUTH_PASSWORD: pass

      - name: Run PHPStan for static analysis
        run: vendor/bin/phpstan analyse --memory-limit=1G

      - name: Run PHP_CodeSniffer for linting
        run: vendor/bin/phpcs --standard=PSR12 app/

  ### This is just an example of how we could autodeploy on main branch update
  deploy:
    runs-on: ubuntu-latest
    needs: test-lint
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.PROD_SERVER }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd /path/to/your/app
            git pull origin main
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
